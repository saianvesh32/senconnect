generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model MeetupRequest{
  id          String   @id @default(cuid())
  senderId    String
  receiverId  String
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  status      String   @default("PENDING") // Options: PENDING, ACCEPTED, REJECTED
  sender      User     @relation("SentRequests", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

}





model User {
  id          String   @id @default(cuid()) 
  fullName    String   @unique
  roll        String   @unique
  branch      String
  section     String
  year        Int
  password    String
  skills      String[] // Array of skills
  projects    Project[]
  sentRequests    MeetupRequest[] @relation("SentRequests")
  receivedRequests MeetupRequest[] @relation("ReceivedRequests")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}



model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  link        String? // Optional: Link to the project (e.g., GitHub or live demo)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
